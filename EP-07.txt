=>useEffect Hook
1. useEffect hook will be called every time when the component is rendered
2. Dependency array will change the behavious of the useEffect 

CASE 1: No Dependency array it is called on every render 
 useEffect(()=>{
        console.log("useEffect called");
    })


CASE 2: Empty Dependency array then useEffect is called on 1st render and only once
useEffect(()=>{
    console.log("useEffect called");
}, [])

CASE 3: If we add any data in Dependency array then useEffect is called only when the data changes
useEffect(()=>{
        console.log("useEffect called");
    }, [btnNameReact])

=> useState Hook
1. never create useState outside of the component
2. it is used to create local state variables inside the component
3. always try to create useState at the top of the component (ie) when the function starts, as it is a good practice and also to avoid any inconsistency.
4. never create useState inside any if else case or any for loop or inside any function, as it leads to inconsistency in your component 


=>Routing concepts
1. install react-router-dom package
2. create a routing configuration inside app.js

3. import createBrowserRouter from react-router-dom 
4. this createBrowserRouter will accept a configuration of list of objects and every object will have 2 keys like path and element
path will define the url and element will define the component to be rendered when the path is accessed
5. also import RouterProvider from react-router-dom
6. react-router-dom - handles 404 error for unknown path url and returns a error page
7. gives access to react hook {useRouteError} and this hook provides detailed information about the error

8. children routes
maintain the header whenever we route to any other pages
outlet component is imported fro9.m react-router-dom and is replaced by child component and tis outlet component cannot be seen in the HTML 
9. Linking of routes
=>never use anchor tag to re-direct to any other pages
as it would re-load the entore web page and then re-directs to the actual page
=>Navigate to any page without reloading the page using Link component from react-router-dom
=> hence this is why we call as a single page application
Link is a wrapper over anchor tag and acts as a anchor tag in HTML

9. 2 types of routing in web-apps
=> Client side routing - does not make a network call and fetch the result from client and routes to amother component wiothout refreshing the page.
=> Server side routing - make a network call and fetch the result from server and refreshes the page 

10. Dyanamic Routing

11. console.log("usestate",useState());

//returns [undefined, Æ’]